using kermeta::standard::*
using kermeta::io::StdIO => stdio
using collaviz::*
using kermeta::emfpersistence::*

package Helper{
	class CollavizHelper
	{
		//search the top of the tree support in order to visit him and its children
		operation searchRootElement(o : WorldObject) : WorldObject is do
			var so : SupportedObject 
			so ?= o
			if so != void then
				if so.support != void then
					result ?= searchRootElement(so.support)
				else
					result ?= so
				end
			else
				result ?= o
			end
		end
		
		//load a model
		operation loadModel(uri : String) : Object is do
			var repository : ResourceSet init ResourceSet.new
			var resource : Resource init repository.createResource(uri)
			resource.load(void)
			result ?= resource.getContents.one
		end
		
		attribute authorizedClasses : set String[0..*]
		
		operation initAuthorizedClasses() : Void is do
			authorizedClasses.add("Ball")
			authorizedClasses.add("Juncture")
		end
		
		operation isAuthorizedClasse(nameClasse : String) : Boolean is do
			result ?= authorizedClasses.exists{n | n==nameClasse}
		end
	}
}