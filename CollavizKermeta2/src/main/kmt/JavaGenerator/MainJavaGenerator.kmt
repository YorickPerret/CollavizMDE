using kermeta::standard::*
using kermeta::io::StdIO => stdio
using JavaGenerator::*
using ecore::*
using Helper::*

package JavaGenerator{
	class MainJavaGenerator
	{

		@main "" // declares that operation as a possible entry point of the program
		operation main(mm : String) : Void is do 
			var generatorComposite : GeneratorComposite init GeneratorComposite.new
			var controllerGenerator : ControllerGenerator init ControllerGenerator.new
			var interfaceControllerGenerator : InterfaceControllerGenerator init InterfaceControllerGenerator.new
			var interfaceAbstractionGenerator : InterfaceAbstractionGenerator init InterfaceAbstractionGenerator.new
			var abstractionGenerator : AbstractionGenerator init AbstractionGenerator.new
			generatorComposite.addGenerator(controllerGenerator)
			generatorComposite.addGenerator(interfaceControllerGenerator)
			generatorComposite.addGenerator(interfaceAbstractionGenerator)
			generatorComposite.addGenerator(abstractionGenerator)
			var helper : CollavizHelper init CollavizHelper.new
			var p : EPackage
			stdio.writeln("******** loading model ********")
			p?=helper.loadModel(mm)
			if p!= void then
				stdio.writeln("******** load success ********")
				generatorComposite.generate(p)
			else
				stdio.writeln("******** load failed ********")
			end
			
		end
	}
}